{"version":3,"sources":["application/Singers/style.js","application/Rank/style.ts","application/Rank/index.tsx"],"names":["NavContainer","styled","div","ListContainer","List","style","ListItem","EnterLoading","Container","ul","props","globalRank","li","tracks","length","SongList","Rank","list","rankList","loading","getRankListDataDispatch","toJS","globalStartIndex","filterIndex","officialList","slice","globalList","useEffect","renderSongList","map","item","index","first","second","renderRankList","global","onClick","id","history","push","className","src","coverImgUrl","alt","updateFrequency","coverImgId","displayStyle","renderRoutes","route","routes","connect","state","getIn","dispatch","getRankList","React","memo"],"mappings":"+TAGaA,EAAeC,IAAOC,IAAV,+IAQZC,EAAgBF,IAAOC,IAAV,8HASbE,EAAOH,IAAOC,IAAV,sMAQJG,IAAM,mBACFA,IAAM,gBAGVC,EAAWL,IAAOC,IAAV,uZAOQG,IAAM,gBAalBA,IAAM,eACVA,IAAM,oBAINE,EAAeN,IAAOC,IAAV,uJ,gHCpDZM,EAAYP,IAAOC,IAAV,qOAULG,IAAM,eACVA,IAAM,oBAQND,EAAOH,IAAOQ,GAAV,sQAGJ,SAAAC,GAAK,OAAIA,EAAMC,WAAa,OAAS,KAIlCN,IAAM,qBAaTC,EAAWL,IAAOW,GAAV,8oBACR,qBAAEC,OAAmBC,OAAS,OAAS,KAEvBT,IAAM,iBAGtB,qBAAEQ,OAAmBC,OAAS,OAAS,UACtC,qBAAED,OAAmBC,OAAS,OAAS,SAuBlCT,IAAM,gBACVA,IAAM,qBAIRU,EAAWd,IAAOQ,GAAV,qMAQJJ,IAAM,gB,wCC7EjBW,EAAO,SAACN,GACZ,IAAiBO,EAAiBP,EAA3BQ,SAAgBC,EAAWT,EAAXS,QAEhBC,EAA2BV,EAA3BU,wBACHF,EAAWD,EAAOA,EAAKI,OAAS,GAGhCC,EAAmBC,YAAYL,GAC/BM,EAAeN,EAASO,MAAM,EAAGH,GACjCI,EAAaR,EAASO,MAAMH,GAEhCK,qBAAU,WACHT,EAASJ,QACZM,MAED,IAEH,IAKMQ,EAAiB,SAACX,GACtB,OAAOA,EAAKH,OACV,cAACC,EAAD,UAEIE,EAAKY,KAAI,SAACC,EAAWC,GACnB,OAAO,+BAAiBA,EAAQ,EAAzB,KAA8BD,EAAKE,MAAnC,MAA6CF,EAAKG,SAAzCF,QAIpB,MAKAG,EAAiB,SAACjB,EAAWkB,GAEjC,OACE,cAAC/B,EAAD,CAAMO,WAAYwB,EAAlB,SAEIlB,EAAKY,KAAI,SAACC,GAER,OACE,eAACxB,EAAD,CAAgCO,OAAQiB,EAAKjB,OAAQuB,QAAS,kBA3BrDC,EA2BuEP,EAAKO,QAzB/F3B,EAAM4B,QAAQC,KAAd,gBAA4BF,IAFV,IAACA,GA2BT,UACE,sBAAKG,UAAU,cAAf,UACE,qBAAKC,IAAKX,EAAKY,YAAaC,IAAI,KAChC,qBAAKH,UAAU,aACf,sBAAMA,UAAU,kBAAhB,SAAmCV,EAAKc,qBAEzChB,EAAeE,EAAKjB,UANRiB,EAAKe,kBAe5BC,EAAe3B,EAAU,CAAC,QAAW,QAAU,CAAC,QAAW,IAG/D,OACE,mCACE,eAACX,EAAD,WACE,cAAC,IAAD,UACE,gCACE,oBAAIgC,UAAU,UAAUnC,MAAOyC,EAA/B,kCACCZ,EAAeV,GAChB,oBAAIgB,UAAU,SAASnC,MAAOyC,EAA9B,kCACCZ,EAAeR,GAAY,GAC3BP,EAAU,cAAC,IAAD,UAAc,cAAC,IAAD,MAA4B,UAGxD4B,YAAarC,EAAMsC,MAAMC,cAoBnBC,uBAbS,SAACC,GAAD,MAAiB,CACvCjC,SAAUiC,EAAMC,MAAM,CAAC,OAAQ,aAC/BjC,QAASgC,EAAMC,MAAM,CAAC,OAAQ,gBAGL,SAACC,GAC1B,MAAO,CACLjC,wBADK,WAEHiC,EAASC,mBAKAJ,CAA6CK,IAAMC,KAAKxC","file":"static/js/7.c96fcdb2.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport style from '../../assets/global-style'\r\n\r\nexport const NavContainer = styled.div`\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  top: 95px;\r\n  width: 100%;\r\n  padding: 5px;\r\n  overflow: hidden;\r\n`\r\nexport const ListContainer = styled.div`\r\n  position: fixed;\r\n  top: 160px;\r\n  left: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  width: 100%;\r\n`\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  margin: auto;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n\r\n  .title {\r\n    margin: 10px 0 10px 10px;\r\n    color: ${style['font-color-desc']};\r\n    font-size: ${style['font-size-s']};\r\n  }\r\n`\r\nexport const ListItem = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0 5px;\r\n  padding: 5px 0;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${style['border-color']};\r\n\r\n  .img_wrapper {\r\n    margin-right: 20px;\r\n\r\n    img {\r\n      border-radius: 3px;\r\n      width: 50px;\r\n      height: 50px;\r\n    }\r\n  }\r\n\r\n  .name {\r\n    font-size: ${style['font-size-m']};\r\n    color: ${style['font-color-desc']};\r\n    font-weight: 500;\r\n  }\r\n`\r\nexport const EnterLoading = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: auto;\r\n`","import styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\n// Props 中的 globalRank 和 tracks.length 均代表是否为全球榜\r\n\r\nexport const Container = styled.div`\r\n  position: fixed;\r\n  top: 90px;\r\n  bottom: 0;\r\n  width: 100%;\r\n\r\n  .offical, .global {\r\n    margin: 10px 5px;\r\n    padding-top: 15px;\r\n    font-weight: 700;\r\n    font-size: ${style['font-size-m']};\r\n    color: ${style['font-color-desc']};\r\n  }\r\n`;\r\n\r\ninterface globalRankProps {\r\n  globalRank: any;\r\n}\r\n\r\nexport const List = styled.ul<globalRankProps>`\r\n  margin-top: 10px;\r\n  padding: 0 5px;\r\n  display: ${props => props.globalRank ? 'flex' : ''};\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  background: ${style['background-color']};\r\n\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 32vw;\r\n  }\r\n`;\r\n\r\ninterface CustomStyleProps {\r\n  tracks?: any;\r\n}\r\n\r\nexport const ListItem = styled.li<CustomStyleProps>`\r\n  display: ${({tracks}) => tracks.length ? 'flex' : ''};\r\n  padding: 3px 0;\r\n  border-bottom: 1px solid ${style['border-color']};\r\n\r\n  .img_wrapper {\r\n    width: ${({tracks}) => tracks.length ? '27vw' : '32vw'};\r\n    height: ${({tracks}) => tracks.length ? '27vw' : '32vw'};\r\n    border-radius: 3px;\r\n    position: relative;\r\n\r\n    .decorate {\r\n      position: absolute;\r\n      bottom: 0;\r\n      width: 100%;\r\n      height: 35px;\r\n      border-radius: 3px;\r\n      background: linear-gradient(hsla(0, 0%, 100%, 0), hsla(0, 0%, 43%, .4));\r\n    }\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 3px;\r\n    }\r\n\r\n    .update_frequecy {\r\n      position: absolute;\r\n      left: 7px;\r\n      bottom: 7px;\r\n      font-size: ${style['font-size-ss']};\r\n      color: ${style['font-color-light']};\r\n    }\r\n  }\r\n`;\r\nexport const SongList = styled.ul`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 10px 10px;\r\n\r\n  > li {\r\n    font-size: ${style['font-size-s']};\r\n    color: grey;\r\n  }\r\n`;","import React, {useEffect} from 'react';\r\nimport {getRankList} from './store';\r\nimport {connect} from 'react-redux';\r\nimport {filterIndex} from '../../api/utils';\r\nimport {Container, List, ListItem, SongList} from './style';\r\nimport Loading from '../../baseUI/loading';\r\nimport Scroll from '../../baseUI/scroll';\r\nimport {renderRoutes} from 'react-router-config';\r\nimport {EnterLoading} from '../Singers/style';\r\n\r\nconst Rank = (props: any) => {\r\n  const {rankList: list, loading} = props;\r\n\r\n  const {getRankListDataDispatch} = props;\r\n  let rankList = list ? list.toJS() : [];\r\n\r\n\r\n  let globalStartIndex = filterIndex(rankList);\r\n  let officialList = rankList.slice(0, globalStartIndex);\r\n  let globalList = rankList.slice(globalStartIndex);\r\n\r\n  useEffect(() => {\r\n    if (!rankList.length) {\r\n      getRankListDataDispatch();\r\n    }\r\n  }, []);\r\n\r\n  const enterDetail = (id: number) => {\r\n\r\n    props.history.push(`/rank/${id}`);\r\n\r\n  };\r\n  const renderSongList = (list: any[]) => {\r\n    return list.length ? (\r\n      <SongList>\r\n        {\r\n          list.map((item: any, index: any) => {\r\n            return <li key={index}>{index + 1}. {item.first} - {item.second}</li>;\r\n          })\r\n        }\r\n      </SongList>\r\n    ) : null;\r\n  };\r\n\r\n\r\n  // 这是渲染榜单列表函数，传入 global 变量来区分不同的布局方式\r\n  const renderRankList = (list: any, global?: any) => {\r\n    // @ts-ignore\r\n    return (\r\n      <List globalRank={global}>\r\n        {\r\n          list.map((item: any) => {\r\n            // @ts-ignore\r\n            return (\r\n              <ListItem key={item.coverImgId} tracks={item.tracks} onClick={() => enterDetail(item.id)}>\r\n                <div className=\"img_wrapper\">\r\n                  <img src={item.coverImgUrl} alt=\"\"/>\r\n                  <div className=\"decorate\"/>\r\n                  <span className=\"update_frequecy\">{item.updateFrequency}</span>\r\n                </div>\r\n                {renderSongList(item.tracks)}\r\n              </ListItem>\r\n            );\r\n          })\r\n        }\r\n      </List>\r\n    );\r\n  };\r\n// 榜单数据未加载出来之前都给隐藏\r\n  let displayStyle = loading ? {'display': 'none'} : {'display': ''};\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Scroll>\r\n          <div>\r\n            <h1 className=\"offical\" style={displayStyle}> 官方榜 </h1>\r\n            {renderRankList(officialList)}\r\n            <h1 className=\"global\" style={displayStyle}> 全球榜 </h1>\r\n            {renderRankList(globalList, true)}\r\n            {loading ? <EnterLoading><Loading/></EnterLoading> : null}\r\n          </div>\r\n        </Scroll>\r\n        {renderRoutes(props.route.routes)}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\n// 映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = (state: any) => ({\r\n  rankList: state.getIn(['rank', 'rankList']),\r\n  loading: state.getIn(['rank', 'loading']),\r\n});\r\n// 映射 dispatch 到 props 上\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    getRankListDataDispatch() {\r\n      dispatch(getRankList());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Rank));\r\n"],"sourceRoot":""}