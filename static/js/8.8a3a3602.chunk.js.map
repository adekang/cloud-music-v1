{"version":3,"sources":["components/list/music.png","components/slider/style.js","components/slider/index.tsx","components/list/style.js","components/list/index.tsx","application/Recommend/style.ts","application/Recommend/index.tsx"],"names":["SliderContainer","styled","div","style","Slider","props","useState","sliderSwiper","setSliderSwiper","bannerList","useEffect","length","newSliderSwiper","Swiper","loop","autoplay","delay","disableOnInteraction","pagination","el","className","map","slider","index","src","imageUrl","width","height","alt","React","memo","ListWrapper","List","ListItem","RecommendList","recommendList","history","item","onClick","id","push","placeholder","require","default","picUrl","getCount","playCount","name","Content","play","Recommend","enterLoading","songsCount","getBannerDataDispatch","getRecommendListDataDispatch","size","bannerListJS","toJS","recommendListJS","show","onScroll","forceCheck","renderRoutes","route","routes","connect","state","getIn","dispatch","actionFetch"],"mappings":"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","file":"static/js/8.8a3a3602.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/music.6275a6ce.png\";","import styled from 'styled-components'\r\nimport style from '../../assets/global-style'\r\n\r\nexport const SliderContainer = styled.div`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n  background: white;\r\n\r\n  .before {\r\n    position: absolute;\r\n    top: -300px;\r\n    height: 400px;\r\n    width: 100%;\r\n    background: ${style['theme-color']};\r\n  }\r\n\r\n  .slider-container {\r\n    position: relative;\r\n    width: 98%;\r\n    height: 160px;\r\n    overflow: hidden;\r\n    margin: auto;\r\n    border-radius: 6px;\r\n\r\n    .slider-nav {\r\n      position: absolute;\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .swiper-pagination-bullet-active {\r\n      background: ${style['theme-color']};\r\n    }\r\n  }\r\n`\r\n","//components/slider/index.js\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { SliderContainer } from \"./style.js\"\r\nimport \"swiper/dist/css/swiper.css\"\r\nimport Swiper from \"swiper\"\r\n\r\nfunction Slider(props: { bannerList: any }) {\r\n\tconst [sliderSwiper, setSliderSwiper] = useState<any>(null)\r\n\tconst { bannerList } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (bannerList.length && !sliderSwiper) {\r\n\t\t\tlet newSliderSwiper = new Swiper(\".slider-container\", {\r\n\t\t\t\tloop: true,\r\n\t\t\t\tautoplay: {\r\n\t\t\t\t\tdelay: 3000,\r\n\t\t\t\t\tdisableOnInteraction: false,\r\n\t\t\t\t},\r\n\t\t\t\tpagination: { el: \".swiper-pagination\" },\r\n\t\t\t})\r\n\t\t\tsetSliderSwiper(newSliderSwiper)\r\n\t\t}\r\n\t}, [bannerList.length, sliderSwiper])\r\n\r\n\treturn (\r\n\t\t<SliderContainer>\r\n\t\t\t<div className='before'></div>\r\n\t\t\t<div className='slider-container'>\r\n\t\t\t\t<div className='swiper-wrapper'>\r\n\t\t\t\t\t{bannerList.map(\r\n\t\t\t\t\t\t(slider: { imageUrl: string | undefined }, index: React.Key | null | undefined) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div className='swiper-slide' key={index}>\r\n\t\t\t\t\t\t\t\t\t<div className='slider-nav'>\r\n\t\t\t\t\t\t\t\t\t\t<img src={slider.imageUrl} width='100%' height='100%' alt='推荐' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='swiper-pagination'></div>\r\n\t\t\t</div>\r\n\t\t</SliderContainer>\r\n\t)\r\n}\r\n\r\nexport default React.memo(Slider)\r\n","import styled from 'styled-components'\r\nimport style from '../../assets/global-style'\r\n\r\nexport const ListWrapper = styled.div`\r\n  max-width: 100%;\r\n\r\n  .title {\r\n    font-weight: 700;\r\n    padding-left: 6px;\r\n    font-size: 14px;\r\n    line-height: 60px;\r\n    color: ${style['font-color']};\r\n  }\r\n`\r\nexport const List = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n`\r\n\r\nexport const ListItem = styled.div`\r\n  position: relative;\r\n  width: 32%;\r\n\r\n  .img_wrapper {\r\n    height: 0;\r\n    padding-bottom: 100%;\r\n\r\n    .decorate {\r\n      position: absolute;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 35px;\r\n      border-radius: 3px;\r\n      background: linear-gradient(hsla(0, 0%, 43%, .4), hsla(0, 0%, 100%, 0));\r\n      z-index: 1;\r\n    }\r\n\r\n    position: relative;\r\n    height: 0;\r\n    padding-bottom: 100%;\r\n\r\n    .play_count {\r\n      position: absolute;\r\n      right: 2px;\r\n      top: 2px;\r\n      font-size: ${style['font-size-s']};\r\n      line-height: 15px;\r\n      color: ${style['font-color-light']} !important;\r\n      z-index: 1;\r\n\r\n      .play {\r\n        vertical-align: top;\r\n      }\r\n    }\r\n\r\n    img {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n\r\n  .desc {\r\n    overflow: hidden;\r\n    margin-top: 2px;\r\n    padding: 0 2px;\r\n    height: 50px;\r\n    text-align: left;\r\n    font-size: ${style['font-size-s']};\r\n    line-height: 1.4;\r\n    color: ${style['font-color-desc']};\r\n  }\r\n`","import React from 'react';\r\nimport {\r\n  ListWrapper,\r\n  ListItem,\r\n  List\r\n} from './style';\r\nimport LazyLoad from 'react-lazyload';\r\nimport {getCount} from '../../api/utils';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\ninterface Props {\r\n  recommendList: any[];\r\n  history?: any;\r\n}\r\n\r\nconst RecommendList: React.FC<Props> = (props) => {\r\n\r\n  const {recommendList, history} = props;\r\n\r\n  const enterDetail = (id: number) => {\r\n    history.push(`/recommend/${id}`);\r\n  };\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <h1 className=\"title\">推荐歌单</h1>\r\n      <List>\r\n        {\r\n          recommendList.map(item => {\r\n            return (\r\n              <ListItem key={item.id} onClick={() => enterDetail(item.id)}>\r\n                <div className=\"img_wrapper\">\r\n                  <div className=\"decorate\"/>\r\n                  <LazyLoad\r\n                    placeholder={<img width=\"100%\" height=\"100%\" src={require('./music.png').default} alt=\"music\"/>}>\r\n                    <img src={item.picUrl + '?param=300x300'} width=\"100%\" height=\"100%\" alt=\"music\"/>\r\n                  </LazyLoad>\r\n                  <div className=\"play_count\">\r\n                    <i className=\"iconfont play\">&#xe885;</i>\r\n                    <span className=\"count\">{getCount(item.playCount)}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"desc\">{item.name}</div>\r\n              </ListItem>\r\n            );\r\n          })\r\n        }\r\n      </List>\r\n    </ListWrapper>\r\n  );\r\n};\r\n\r\n// @ts-ignore\r\nexport default React.memo(RecommendList);","import styled from 'styled-components';\r\n\r\ninterface CustomStyleProps {\r\n  play?: any;\r\n}\r\n\r\nexport const Content = styled.div<CustomStyleProps>`\r\n  position: fixed;\r\n  top: 90px;\r\n  bottom: ${props => props.play > 0 ? '60px' : 0};\r\n  width: 100%;\r\n`;\r\n","import React, {useEffect} from 'react';\r\nimport Slider from '../../components/slider';\r\nimport RecommendList from '../../components/list';\r\nimport {Content} from './style';\r\nimport Scroll from '../../baseUI/scroll';\r\nimport {connect} from 'react-redux';\r\nimport * as actionFetch from '../Recommend/store/actionCreators';\r\nimport {forceCheck} from 'react-lazyload';\r\nimport Loading from '../../baseUI/loading/index';\r\nimport {renderRoutes} from 'react-router-config';\r\n\r\nfunction Recommend(props: any) {\r\n  const {bannerList, recommendList, enterLoading, history, songsCount} = props;\r\n\r\n  const {getBannerDataDispatch, getRecommendListDataDispatch} = props;\r\n\r\n  useEffect(() => {\r\n      if (!bannerList.size) {\r\n        getBannerDataDispatch();\r\n      }\r\n    },\r\n    [bannerList.size, getBannerDataDispatch]);\r\n  useEffect(() => {\r\n    if (!recommendList.size) {\r\n      getRecommendListDataDispatch();\r\n    }\r\n  }, [recommendList.size, getRecommendListDataDispatch]);\r\n\r\n  const bannerListJS = bannerList ? bannerList.toJS() : [];\r\n  const recommendListJS = recommendList ? recommendList.toJS() : [];\r\n\r\n\r\n  return (\r\n    <Content play={songsCount}>\r\n      {enterLoading ? <Loading show/> : null}\r\n      <Scroll onScroll={forceCheck}>\r\n        <div>\r\n          <Slider bannerList={bannerListJS}/>\r\n          <RecommendList recommendList={recommendListJS} history={history}/>\r\n        </div>\r\n      </Scroll>\r\n      {renderRoutes(props.route.routes)}\r\n    </Content>\r\n  );\r\n}\r\n\r\n// 映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = (state: { getIn: (arg0: string[]) => any; }) => ({\r\n  // 不要在这里将数据 toJS\r\n  // 不然每次 diff 比对 props 的时候都是不一样的引用，还是导致不必要的重渲染，属于滥用 immutable\r\n  bannerList: state.getIn(['recommend', 'bannerList']),\r\n  recommendList: state.getIn(['recommend', 'recommendList']),\r\n  enterLoading: state.getIn(['recommend', 'enterLoading']),\r\n  songsCount: state.getIn(['player', 'playList']).size,//尽量减少toJS操作，直接取size属性就代表了list的长度\r\n});\r\n// 映射 dispatch 到 props 上\r\nconst mapDispatchToProps = (dispatch: (arg0: any) => void) => {\r\n  return {\r\n    getBannerDataDispatch() {\r\n      dispatch(actionFetch.getBannerList());\r\n    },\r\n    getRecommendListDataDispatch() {\r\n      dispatch(actionFetch.getRecommendList());\r\n    },\r\n  };\r\n};\r\n\r\n// 将 ui 组件包装成容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Recommend));"],"sourceRoot":""}